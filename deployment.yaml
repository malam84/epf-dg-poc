kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: postgresql
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:12-el8'
        lastTriggeredImage: 'image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:aff65d01812645d5c63a9dce39e7e6dc548b19f34f336be08f5a4b58ecdd843e'
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: postgresql
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: postgresql
    spec:
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: 'image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:aff65d01812645d5c63a9dce39e7e6dc548b19f34f336be08f5a4b58ecdd843e'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler


---
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  namespace: epf-postgresql
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    name: postgresql


  ---
  kind: Secret
apiVersion: v1
metadata:
  name: postgresql
  namespace: epf-postgresql
  uid: ae65b5c3-2ccc-4087-8ecb-052b71bc45a9
  resourceVersion: '186682'
  creationTimestamp: '2025-04-14T10:47:01Z'
  labels:
    template: postgresql-persistent-template
    template.openshift.io/template-instance-owner: 29795c5d-c1cc-437d-8581-3b3d55d3a8ec
  annotations:
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  managedFields:
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: v1
      time: '2025-04-14T10:47:01Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:database-name': {}
          'f:database-password': {}
          'f:database-user': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:template.openshift.io/expose-database_name': {}
            'f:template.openshift.io/expose-password': {}
            'f:template.openshift.io/expose-username': {}
          'f:labels':
            .: {}
            'f:template': {}
            'f:template.openshift.io/template-instance-owner': {}
        'f:type': {}
data:
  database-name: a3dzcA==
  database-password: cGFzc3dvcmQ=
  database-user: dXNlckpLWA==
type: Opaque
----
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewBuild
  resourceVersion: '232734'
  name: kwsp
  uid: ae6d7203-cc03-4325-a62d-a051d33261f1
  creationTimestamp: '2025-04-14T04:00:11Z'
  generation: 33
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: build.openshift.io/v1
      time: '2025-04-14T04:00:11Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:build': {}
        'f:spec':
          'f:runPolicy': {}
          'f:source':
            'f:git':
              .: {}
              'f:uri': {}
            'f:type': {}
          'f:strategy':
            'f:dockerStrategy':
              .: {}
              'f:from': {}
            'f:type': {}
          'f:triggers': {}
    - manager: Mozilla
      operation: Update
      apiVersion: build.openshift.io/v1
      time: '2025-04-15T01:19:06Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:output':
            'f:to': {}
    - manager: openshift-apiserver
      operation: Update
      apiVersion: build.openshift.io/v1
      time: '2025-04-15T01:19:18Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:imageChangeTriggers': {}
          'f:lastVersion': {}
  namespace: kwsp-apps
  labels:
    build: kwsp
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'kwsp:8.0'
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Docker
    dockerStrategy:
      from:
        kind: ImageStreamTag
        name: 'java-runtime:openjdk-17-ubi8'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/malam84/epf-dg-poc.git'
  triggers:
    - type: GitHub
      github:
        secret: aPAnyPoFM5b3ktRnZHc_
    - type: Generic
      generic:
        secret: Ti0c0Uh1fCrwDpIjfGHQ
    - type: ConfigChange
    - type: ImageChange
      imageChange: {}
  runPolicy: Serial
status:
  lastVersion: 24
  imageChangeTriggers:
    - lastTriggeredImageID: 'image-registry.openshift-image-registry.svc:5000/openshift/java-runtime@sha256:8a5192fddca3ef71c29a146b41232a40c957c48505fe793baf678a11208663de'
      from:
        name: 'java-runtime:openjdk-17-ubi8'
      lastTriggerTime: null

